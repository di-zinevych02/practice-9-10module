{"version":3,"file":"index.js","sources":["../src/js/localStorageApi.js","../src/js/render-tasks-1.js","../src/main.js"],"sourcesContent":["const TASKS = 'tasks';\n\nfunction initStorage() {\n  const itemOfStorage = localStorage.getItem(TASKS);\n  if (!itemOfStorage) {\n    localStorage.setItem(TASKS, JSON.stringify([]));\n  } else {\n    return JSON.parse(itemOfStorage);\n  }\n}\n\nfunction addTask(task) {\n  const taskArr = JSON.parse(localStorage.getItem(TASKS));\n  taskArr.push(task);\n  localStorage.setItem(TASKS, JSON.stringify(taskArr));\n}\n\nexport default {\n  initStorage,\n  addTask,\n};\n","const TASKS = 'tasks';\n\nexport const renderTasks = () => {\n  const tasksList = document.querySelector('.tasks-list');\n  tasksList.innerHTML = ``;\n\n  const tasks = JSON.parse(localStorage.getItem(TASKS));\n  const markupTask = tasks\n    .map(ell => {\n      const { id, taskName, taskText } = ell;\n      return `<li class=\"task-list-item \" data-id=\"${id}\">\n     <button class=\"task-list-item-btn\">Удалить</button>\n      <h3>${taskName}</h3>\n     <p>${taskText}</p>\n  </li>`;\n    })\n    .join('');\n  tasksList.insertAdjacentHTML('beforeend', markupTask);\n};\n","/**\n * Створи список справ.\n * На сторінці є два інпути які має вводиться назва і текст задачі.\n * Після натискання на кнопку \"Додати\" завдання додається до списку #task-list.\n *\n * Розмітка картки задачі\n * <li class=\"task-list-item\">\n *     <button class=\"task-list-item-btn\">Удалить</button>\n *     <h3>Заголовок</h3>\n *     <p>Текст</p>\n * </li>\n *\n * У кожної картки має бути кнопка \"Видалити\", щоб можна було\n * прибрати завдання зі списку.\n * Список із завданнями має бути доступним після перезавантаження сторінки.\n */\n// Отримати значення - сформувати об'єкт для локального сховища з додаванням айді- записати в сховище\nimport { nanoid } from 'nanoid';\nimport localStorageApi from './js/localStorageApi';\nimport { renderTasks } from './js/render-tasks-1';\nconst taskForm = document.querySelector('#task-form');\nconst TASKS = 'tasks';\nlocalStorageApi.initStorage();\n\ntaskForm.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const taskNameValue = event.currentTarget.elements.taskName.value.trim();\n  const taskTextValue = event.currentTarget.elements.taskText.value.trim();\n\n  if (!taskNameValue && !taskTextValue) {\n    alert('Введіть назву та текст задачі');\n    return;\n  }\n  const newTask = {\n    id: nanoid(),\n    taskName: taskNameValue,\n    taskText: taskTextValue,\n  };\n\n  localStorageApi.addTask(newTask);\n  renderTasks();\n});\nrenderTasks();\n"],"names":["TASKS","initStorage","itemOfStorage","addTask","task","taskArr","localStorageApi","renderTasks","tasksList","markupTask","ell","id","taskName","taskText","taskForm","event","taskNameValue","taskTextValue","newTask","nanoid"],"mappings":"svBAAA,MAAMA,EAAQ,QAEd,SAASC,GAAc,CACrB,MAAMC,EAAgB,aAAa,QAAQF,CAAK,EAChD,GAAI,CAACE,EACH,aAAa,QAAQF,EAAO,KAAK,UAAU,CAAE,CAAA,CAAC,MAE9C,QAAO,KAAK,MAAME,CAAa,CAEnC,CAEA,SAASC,EAAQC,EAAM,CACrB,MAAMC,EAAU,KAAK,MAAM,aAAa,QAAQL,CAAK,CAAC,EACtDK,EAAQ,KAAKD,CAAI,EACjB,aAAa,QAAQJ,EAAO,KAAK,UAAUK,CAAO,CAAC,CACrD,CAEA,MAAeC,EAAA,CACb,YAAAL,EACA,QAAAE,CACF,ECpBMH,EAAQ,QAEDO,EAAc,IAAM,CAC/B,MAAMC,EAAY,SAAS,cAAc,aAAa,EACtDA,EAAU,UAAY,GAGtB,MAAMC,EADQ,KAAK,MAAM,aAAa,QAAQT,CAAK,CAAC,EAEjD,IAAIU,GAAO,CACV,KAAM,CAAE,GAAAC,EAAI,SAAAC,EAAU,SAAAC,CAAQ,EAAKH,EACnC,MAAO,wCAAwCC,CAAE;AAAA;AAAA,YAE3CC,CAAQ;AAAA,UACVC,CAAQ;AAAA,QAElB,CAAK,EACA,KAAK,EAAE,EACVL,EAAU,mBAAmB,YAAaC,CAAU,CACtD,ECEMK,EAAW,SAAS,cAAc,YAAY,EAEpDR,EAAgB,YAAW,EAE3BQ,EAAS,iBAAiB,SAAUC,GAAS,CAC3CA,EAAM,eAAc,EAEpB,MAAMC,EAAgBD,EAAM,cAAc,SAAS,SAAS,MAAM,OAC5DE,EAAgBF,EAAM,cAAc,SAAS,SAAS,MAAM,OAElE,GAAI,CAACC,GAAiB,CAACC,EAAe,CACpC,MAAM,+BAA+B,EACrC,MACD,CACD,MAAMC,EAAU,CACd,GAAIC,EAAQ,EACZ,SAAUH,EACV,SAAUC,CACd,EAEEX,EAAgB,QAAQY,CAAO,EAC/BX,GACF,CAAC,EACDA,EAAa"}